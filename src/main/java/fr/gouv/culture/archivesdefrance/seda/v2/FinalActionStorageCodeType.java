//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.29 at 01:17:12 AM CET 
//
package fr.gouv.culture.archivesdefrance.seda.v2;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for FinalActionStorageCodeType.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <
 * pre>
 * &lt;simpleType name="FinalActionStorageCodeType"> &lt;restriction
 * base="{fr:gouv:culture:archivesdefrance:seda:v2.1}NonEmptyTokenType"> &lt;enumeration value="RestrictAccess"/>
 * &lt;enumeration value="Transfer"/> &lt;enumeration value="Copy"/> &lt;/restriction> &lt;/simpleType>
 * </pre>
 */
@XmlType(name = "FinalActionStorageCodeType")
@XmlEnum
public enum FinalActionStorageCodeType {

    /**
     * Restrict access final action storage code type.
     */
    @XmlEnumValue("RestrictAccess")
    RESTRICT_ACCESS("RestrictAccess"),
    /**
     * Transfer final action storage code type.
     */
    @XmlEnumValue("Transfer")
    TRANSFER("Transfer"),
    /**
     * Copy final action storage code type.
     */
    @XmlEnumValue("Copy")
    COPY("Copy");
    private final String value;

    FinalActionStorageCodeType(String v) {
        value = v;
    }

    /**
     * Value string.
     *
     * @return the string
     */
    public String value() {
        return value;
    }

    /**
     * From value final action storage code type.
     *
     * @param v the v
     * @return the final action storage code type
     */
    public static FinalActionStorageCodeType fromValue(String v) {
        for (FinalActionStorageCodeType c : FinalActionStorageCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
