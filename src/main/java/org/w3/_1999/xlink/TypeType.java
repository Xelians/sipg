//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.09.15 at 07:07:47 PM CEST 
//
package org.w3._1999.xlink;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for typeType.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <
 * pre>
 * &lt;simpleType name="typeType"> &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"> &lt;enumeration
 * value="simple"/> &lt;enumeration value="extended"/> &lt;enumeration value="title"/> &lt;enumeration
 * value="resource"/> &lt;enumeration value="locator"/> &lt;enumeration value="arc"/> &lt;/restriction> &lt;/simpleType>
 * </pre>
 */
@XmlType(name = "typeType")
@XmlEnum
public enum TypeType {

    /**
     * Simple type type.
     */
    @XmlEnumValue("simple")
    SIMPLE("simple"),
    /**
     * Extended type type.
     */
    @XmlEnumValue("extended")
    EXTENDED("extended"),
    /**
     * Title type type.
     */
    @XmlEnumValue("title")
    TITLE("title"),
    /**
     * Resource type type.
     */
    @XmlEnumValue("resource")
    RESOURCE("resource"),
    /**
     * Locator type type.
     */
    @XmlEnumValue("locator")
    LOCATOR("locator"),
    /**
     * Arc type type.
     */
    @XmlEnumValue("arc")
    ARC("arc");
    private final String value;

    TypeType(String v) {
        value = v;
    }

    /**
     * Value string.
     *
     * @return the string
     */
    public String value() {
        return value;
    }

    /**
     * From value type type.
     *
     * @param v the v
     * @return the type type
     */
    public static TypeType fromValue(String v) {
        for (TypeType c : TypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
